syntax = "proto3";

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package v1.operator;

import "google/protobuf/empty.proto";

option go_package = "github.com/bhojpur/api/pkg/core/v1/operator;operator";

service Operator {
  // Sends events to Bhojpur Application runtime sidecars upon component changes.
  rpc ComponentUpdate (ComponentUpdateRequest) returns (stream ComponentUpdateEvent) {}
  // Returns a list of available components
  rpc ListComponents (ListComponentsRequest) returns (ListComponentResponse) {}
  // Returns a given configuration by name
  rpc GetConfiguration (GetConfigurationRequest) returns (GetConfigurationResponse) {}
  // Returns a list of pub/sub subscriptions
  rpc ListSubscriptions (google.protobuf.Empty) returns (ListSubscriptionsResponse) {}
  // Returns a list of pub/sub subscriptions, ListSubscriptionsRequest to expose pod info
  rpc ListSubscriptionsV2 (ListSubscriptionsRequest) returns (ListSubscriptionsResponse) {}
}

// ListComponentsRequest is the request to get components for a Bhojpur Application
// runtime sidecar in namespace.
message ListComponentsRequest {
  string namespace = 1;
  string podName = 2;
}

// ComponentUpdateRequest is the request to get updates about new components for a
// given namespace.
message ComponentUpdateRequest {
  string namespace = 1;
  string podName = 2;
}

// ComponentUpdateEvent includes the updated component event.
message ComponentUpdateEvent {
  bytes component = 1;
}

// ListComponentResponse includes the list of available components.
message ListComponentResponse {
  repeated bytes components = 1;
}

// GetConfigurationRequest is the request message to get the configuration.
message GetConfigurationRequest {
  string name = 1;
  string namespace = 2;
  string podName = 3;
}

// GetConfigurationResponse includes the requested configuration.
message GetConfigurationResponse {
  bytes configuration = 1;
}

// ListSubscriptionsResponse includes pub/sub subscriptions.
message ListSubscriptionsResponse {
  repeated bytes subscriptions = 1;
}

message ListSubscriptionsRequest {
  string podName = 1;
  string namespace = 2;
}