syntax = "proto3";

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package v1.internals;

import "pkg/core/v1/common/common.proto";
import "pkg/core/v1/internals/apiversion.proto";
import "pkg/core/v1/internals/status.proto";

option go_package = "github.com/bhojpur/api/pkg/core/v1/internals;internals";

// ServiceInvocation service is used to exchange the data between  caller
// Bhojpur Application runtime and callee Bhojpur Application runtime.
//
// The request message includes caller's HTTP/gRPC request and deliver callee's
// response including status code.
// The response status of rpc methods represents of internal gRPC connection
// status, not callee's response status.
//
// Thus, ServiceInvocation gRPC response returns OK in most cases regardless
// of callee's response.
service ServiceInvocation {
  // Invokes a method of the specific actor.
  rpc CallActor (InternalInvokeRequest) returns (InternalInvokeResponse) {}

  // Invokes a method of the specific service.
  rpc CallLocal (InternalInvokeRequest) returns (InternalInvokeResponse) {}
}

// Actor represents compute processing actor using actor_type and actor_id
message Actor {
  // Required. The type of actor.
  string actor_type = 1;

  // Required. The ID of actor type (actor_type)
  string actor_id = 2;
}

// InternalInvokeRequest is the message to transfer caller's data to callee for
// service invocation. This includes callee's app id and caller's request data.
message InternalInvokeRequest {
  // Required. The version of Bhojpur Application runtime API.
  APIVersion ver = 1;

  // Required. metadata holds caller's HTTP headers or gRPC metadata.
  map<string, ListStringValue> metadata = 2;

  // Required. message including caller's invocation request.
  v1.common.InvokeRequest message = 3;

  // Actor type and id. This field is used only for actor service invocation.
  Actor actor = 4;
}

// InternalInvokeResponse is the message to transfer callee's response to caller
// for service invocation.
message InternalInvokeResponse {
  // Required. HTTP/gRPC service status.
  Status status = 1;

  // Required. The application callback response headers.
  map<string, ListStringValue> headers = 2;

  // Application callback response trailers. It will be used only for gRPC type
  // application callback
  map<string, ListStringValue> trailers = 3;

  // Callee's invocation response message.
  v1.common.InvokeResponse message = 4;
}

// ListStringValue represents string value array
message ListStringValue {
  // The array of string.
  repeated string values = 1;
}